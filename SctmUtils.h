/**
* @file SctmUtils.h 
* @brief This file contains the utilities used in the simulation
*
*
*
* @author
* @version 
* @date 2013-7-21   16:16
* @note
* @todo
*/
#pragma once

#define DEBUG
#include <string>
#include <ctime>

//use macro DEBUG to determine if SCTM_ASSERT is defined
#ifdef DEBUG
	#define SCTM_ERROR false
	#define SCTM_ASSERT(cond, err_code) if (!(cond)) { SctmUtils::SctmDebug::ErrorCodeParser(err_code); }
#else
	#define SCTM_ERROR
	#define SCTM_ASSERT(cond, err_code)
#endif // DEBUG


using std::string;
namespace SctmUtils
{
	/// @brief This class is used to deal with the timing problems in the simulation
	class SctmTimer
	{
		static const int clockPerSecond = CLOCKS_PER_SEC;
	public:
		SctmTimer():start_time(0), end_time(0), duration(0)
		{
			Start();
		}
		void Start();
		void Reset();
		void End();
		double Duration();

	protected:
		double duration;
		std::clock_t start_time;
		std::clock_t end_time;
	};

	//TODO: a common message class is needed to output the process of the computation
	
	/// @brief The methods used in debugging are defined in this class.
	///
	/// This class is also used to observe the intermediate results during the simulation
	class SctmDebug
	{
	public:
		/// @brief Message is used to output message to console with given message.
		/// 
		///
		/// 
		/// @param string msg
		/// @pre
		/// @return void
		/// @note
		static void Message(string msg);
		/// @brief ErrorCodeParser is used to parse the error code generated by assertion.
		/// 
		///
		/// 
		/// @param int err_code
		/// @pre
		/// @return void
		/// @note
		static void ErrorCodeParser(int err_code);
	};
}